# File path: .github/workflows/build-openwrt.yml
name: Build RAX3000M Firmware

on:
  workflow_dispatch:  # 仅保留手动触发

env:
  REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x.git
  REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: configs/rax3000m.config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  TZ: Asia/Shanghai
  FIRMWARE_NAME: RAX3000M_$(date +"%Y%m%d")  # 固件名称模板

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Restore Cache
      uses: actions/cache@v3
      with:
        path: |
          /workdir/openwrt/dl
          /workdir/openwrt/ccache
        key: ${{ runner.os }}-immortalwrt-${{ hashFiles('$FEEDS_CONF') }}-${{ hashFiles('$CONFIG_FILE') }}

    - name: Setup Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo apt-get update -qq
        sudo apt-get install -y build-essential ccache libncurses5-dev
        sudo bash <(curl -sL https://build-scripts.immortalwrt.eu.org/init_build_environment.sh)
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir && sudo chown $USER:$GROUPS /workdir

    - name: Clone Source
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt

    - name: Load Configurations
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF /workdir/openwrt/feeds.conf.default
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE /workdir/openwrt/.config
        chmod +x $DIY_P1_SH $DIY_P2_SH
        cd /workdir/openwrt && $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update Feeds
      run: cd /workdir/openwrt && ./scripts/feeds update -a

    - name: Install Feeds
      run: cd /workdir/openwrt && ./scripts/feeds install -a

    - name: Download Packages
      run: |
        cd /workdir/openwrt
        make defconfig
        echo "CONFIG_CCACHE=y" >> .config
        make CCACHE=1 download -j$(($(nproc) + 1))

    - name: Compile Firmware
      env:
        CCACHE_MAXSIZE: 2G
      run: |
        cd /workdir/openwrt
        make CCACHE=1 -j$(($(nproc) + 1)) || make CCACHE=1 -j1 V=s
        echo "FIRMWARE_NAME=$FIRMWARE_NAME" >> $GITHUB_ENV

    - name: Upload Firmware
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.FIRMWARE_NAME }}
        path: /workdir/openwrt/bin/targets/*/*/*
